// 5. Функция выбора случайного элемента из массива: Создайте функцию randomElement(arr), которая возвращает случайный элемент из переданного массива.

let arr = [100, 101, 102, 103, 104, 105];

function getRandom(arr) {
    let max = arr.length - 1,
        min = 0,
        numRandom = Math.random() * (max - min) + min;
    numRandom = Math.round(numRandom);

    return arr[numRandom];
}

console.log(getRandom(arr));

// 3. Напишите функцию, которая принимает две даты и возвращает количество дней между ними. В зависимости от значения, выведите: "дата уже близко" (< 3 дней), "еще есть время" (от 3 до 7), "далековато еще" (> 7 дней).

function daysBetween(date1, date2) {
    let diff = new Date(date1) - new Date(date2);
    let diffDays = Math.floor(diff / 1000 / 60 / 60 / 24);
    
    if (diffDays < 3) {
      return "Дата уже близко";
    } else if (diffDays <= 7) {
      return "Еще есть время";
    } else if (diffDays > 7) {
      return "Далековато еще";
    }
}

let result = daysBetween("2024-11-28", "2024-11-13");
console.log(result);

// 4. Напишите функцию celsiusToFahrenheit(celsius), которая конвертирует температуру из градусов Цельсия в градусы Фаренгейта. В зависимости от температуры, выведите предупреждение: "сегодня прохладнее, чем обычно" (от 5 до 10), "одевайтесь теплее" (от 0 до 5), "сегодня очень холодно" (меньше 0 и до -5), "оставайтесь дома" (< -5).

function celsiusToFahrenheit(celsius) {
    let fahrenheit = celsius * 9 / 5 + 32;
    
    if (fahrenheit < -5) {
      return "оставайтесь дома";
    } else if (fahrenheit >= -5 && fahrenheit < 0 ) {
      return "сегодня очень холодно";
    } else if (fahrenheit >= 0 && fahrenheit < 5) {
      return "одевайтесь теплее";
    } else if (fahrenheit >= 5 && fahrenheit < 10) {
        return "сегодня прохладнее, чем обычно";
    } else {
        return "сегодня нормальная погода";
    }
}

console.log(celsiusToFahrenheit(prompt("Введите температуру в градусах Цельсия")));

// 7. Напишите программу, которая генерирует случайным образом новый пароль, состоящий из 8 чисел (параметром можно задавать длину) и возвращает результат. По желанию, доработайте функцию: сделайте генератор паролей из латинских символов, целых чисел и специальных символов: _-,.&*^$#@+=!; минимум один большой символ, одна цифра, один спец. символ.

//доделаю
function getPassword(length = 8) {
    let password = "";

    for (let i = 0; i < length; i++) {
        password += Math.floor(Math.random() * (9 - 0) + 0);
    }

    return password;
}

console.log(getPassword());

/* 9. Создайте функцию-цензор, которая проверяет текст на наличие нецензурных слов и заменяет их на "#". 
Пример текста: 
"В сером городе, где каждый день напоминал предыдущий, одиночество казалось нестерпимым. Люди сливались в одну серую массу, а Яна, сжав кулаки, прокладывала путь сквозь толпу. "Какая же нахрен жизнь!" – думала она, чувствуя, как ветер шутит с ее волосами. Бросив взглянуть на небо, она заметила, что даже облака выглядят опустошенно. "Почему у всех так легко? Почему я, черт побери, должна каждый раз зажмуриваться от этой скуки?" Она присела на старую скамейку в парке и, посмотрев на прохожих, вдруг почувствовала, как на душе легло тяжелое бремя. "Да нахрен с ним, может, стоит просто сбежать?" – прошептала она, уже представляя, как дерзко покидает этот серый мир. В её сердце разгорелось пламя, и, поднимаясь, она с готовностью шагнула навстречу жизни. Ей не нужны были никакие фальшивые улыбки, лишь свобода и возможность быть собой. Бляха, она заслуживала этого! И, стиснув зубы, уверенно направилась в неизвестность, где ждала её настоящая сказка."
Нецензурные слова: "нахрен", "черт", "бляха".
Предусмотрите возможность расширения проверяемых слов в тексте.*/

//доделаю
function censorText(str) {
    newStr = str.replace(/нахрен/gi, '#')
                .replace(/черт/gi, '#')
                .replace(/бляха/gi, '#');

    return newStr;
}

console.log(censorText('В сером городе, где каждый день напоминал предыдущий, одиночество казалось нестерпимым. Люди сливались в одну серую массу, а Яна, сжав кулаки, прокладывала путь сквозь толпу. "Какая же нахрен жизнь!" – думала она, чувствуя, как ветер шутит с ее волосами. Бросив взглянуть на небо, она заметила, что даже облака выглядят опустошенно. "Почему у всех так легко? Почему я, черт побери, должна каждый раз зажмуриваться от этой скуки?" Она присела на старую скамейку в парке и, посмотрев на прохожих, вдруг почувствовала, как на душе легло тяжелое бремя. "Да нахрен с ним, может, стоит просто сбежать?" – прошептала она, уже представляя, как дерзко покидает этот серый мир. В её сердце разгорелось пламя, и, поднимаясь, она с готовностью шагнула навстречу жизни. Ей не нужны были никакие фальшивые улыбки, лишь свобода и возможность быть собой. Бляха, она заслуживала этого! И, стиснув зубы, уверенно направилась в неизвестность, где ждала её настоящая сказка.'));

// 1. Напишите функцию, которая добавляет в существующий массив (можно пустой) города Беларуси. Если в качестве параметра ничего не передается в функцию, то при каждом ее вызове, новый город запрашивается через prompt, иначе новые города можно добавить одним параметром - текстом городов через запятую. Выведите получившийся массив в алфавитном порядке.

let citiesArray = [];

function getCities(citiesStr) {
    if (citiesStr === undefined) {
        let city = prompt("Введите название города Беларуси");
        citiesArray.push(city);
        citiesArray.sort();

        return citiesArray;

    } else {
        citiesArray = citiesStr.split(', ').sort();

        return citiesArray;
    }
}

console.log(getCities("Минск, Воложин, Логойск, Лида, Россь"));
// console.log(getCities());

// 8. Создайте функцию, которая создает произвольный HTML-элемент в <body> в виде круга/овала/квадрата/прямоугольника. Функция должна принимать параметры: width, height, radius, color; создавать запись "<div style="width: 200px; height: 100px, border-radius: 5px; background-color: red;"></div>". Данное значение добавляйте через document.write. Подумайте о том, как сделать случайную генерацию фигур по вызову функции без параметров.

function createShape(width, height, radius, color) {
    width = width || Math.round(Math.random() * (500 - 50) + 50);
    height = height || Math.round(Math.random() * (500 - 50) + 50);
    radius = radius || Math.round(Math.random() * Math.min(width, height) / 2);
    color = color || `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`;

    let div = `<div style="width: ${width}px; height: ${height}px; border-radius: ${radius}px; background-color: ${color};"></div>`;

    document.write(div);
}

createShape(400, 280, 30, "black");
createShape();

// 2. Создайте двумерный массив [['Иван', 'Катя', 'Ольга', 'Максим'], ['Минск', 'Брест', 'Гродно', 'Могилев']]. Используя вложенные циклы вывести в консоль строки вида: "Иван из Минск", "Катя из Брест", "Ольга из Гродно", "Максим из Могилев". Создайте массив с расстояниями до городов от Минска (нулевой км). Выведите информацию о расстоянии между Иваном и Максимом. Предусмотрите возможность запрашивать расстояние между другими людьми.

// 6. Шифр Цезаря: Напишите функцию, которая шифрует латинскую строку с помощью шифра Цезаря с заданным сдвигом. Например: "table" со сдвигом 2 будет "vcdng". Каждая буква "table" имеет свой номер в таблице ASCI (116, 97, 98, 108, 101). Создайте вторую функцию, которая будет расшифровывать текст, если передать правильный ключ сдвига.

// 10. Создайте функцию-конструктор или отдельный простой объект "Тамагочи" с минимальным набором функций: включение, выключение, вывод общей информации о состоянии (имя, дата рождения, здоровье по 5-бальной шкале, сытость по 5 шкале, сон в часах от 0 до 8), покормить, спать. При включении "друга" запрашивается имя, автоматически добавляется дата рождения, и все показатели состояния устанавливаются в максимальные значения. Каждую минуту (или 1 час, как вы захотите), показатель сытости уменьшается на одну единицу. Каждый раз, когда сытость доходит до 1 и меньше, то уменьшается здоровье на 1 единицу. Если "друг" не спал больше 6 часов, то каждый последующий час здоровье уменьшается на 1 единицу. Чтобы восстановить здоровье, нужно быть сытым и хорошо спать: при каждом вызове метода "покормить" или "спать" соотв. параметры увеличиваются на 1 единицу. Каждый раз, когда параметры сон и сытость приходят к значению 5, то здоровье увеличивается на 1 единицу, но не может превышать максимального значения. По вашему желанию, функции тамагочи могут быть улучшены или добавлены новые. Проявите фантазию!